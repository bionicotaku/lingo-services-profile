// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bionicotaku/lingo-services-profile/internal/services (interfaces: VideoStatsRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	po "github.com/bionicotaku/lingo-services-profile/internal/models/po"
	txmanager "github.com/bionicotaku/lingo-utils/txmanager"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockVideoStatsRepository is a mock of VideoStatsRepository interface.
type MockVideoStatsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockVideoStatsRepositoryMockRecorder
}

// MockVideoStatsRepositoryMockRecorder is the mock recorder for MockVideoStatsRepository.
type MockVideoStatsRepositoryMockRecorder struct {
	mock *MockVideoStatsRepository
}

// NewMockVideoStatsRepository creates a new mock instance.
func NewMockVideoStatsRepository(ctrl *gomock.Controller) *MockVideoStatsRepository {
	mock := &MockVideoStatsRepository{ctrl: ctrl}
	mock.recorder = &MockVideoStatsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockVideoStatsRepository) EXPECT() *MockVideoStatsRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockVideoStatsRepository) Get(arg0 context.Context, arg1 txmanager.Session, arg2 uuid.UUID) (*po.ProfileVideoStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].(*po.ProfileVideoStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockVideoStatsRepositoryMockRecorder) Get(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockVideoStatsRepository)(nil).Get), arg0, arg1, arg2)
}

// ListByIDs mocks base method.
func (m *MockVideoStatsRepository) ListByIDs(arg0 context.Context, arg1 txmanager.Session, arg2 []uuid.UUID) ([]*po.ProfileVideoStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListByIDs", arg0, arg1, arg2)
	ret0, _ := ret[0].([]*po.ProfileVideoStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListByIDs indicates an expected call of ListByIDs.
func (mr *MockVideoStatsRepositoryMockRecorder) ListByIDs(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListByIDs", reflect.TypeOf((*MockVideoStatsRepository)(nil).ListByIDs), arg0, arg1, arg2)
}
