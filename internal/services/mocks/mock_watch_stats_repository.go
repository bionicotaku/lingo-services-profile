// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bionicotaku/lingo-services-profile/internal/services (interfaces: WatchStatsRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	txmanager "github.com/bionicotaku/lingo-utils/txmanager"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockWatchStatsRepository is a mock of WatchStatsRepository interface.
type MockWatchStatsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockWatchStatsRepositoryMockRecorder
}

// MockWatchStatsRepositoryMockRecorder is the mock recorder for MockWatchStatsRepository.
type MockWatchStatsRepositoryMockRecorder struct {
	mock *MockWatchStatsRepository
}

// NewMockWatchStatsRepository creates a new mock instance.
func NewMockWatchStatsRepository(ctrl *gomock.Controller) *MockWatchStatsRepository {
	mock := &MockWatchStatsRepository{ctrl: ctrl}
	mock.recorder = &MockWatchStatsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWatchStatsRepository) EXPECT() *MockWatchStatsRepositoryMockRecorder {
	return m.recorder
}

// Increment mocks base method.
func (m *MockWatchStatsRepository) Increment(arg0 context.Context, arg1 txmanager.Session, arg2 uuid.UUID, arg3, arg4, arg5, arg6 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Increment", arg0, arg1, arg2, arg3, arg4, arg5, arg6)
	ret0, _ := ret[0].(error)
	return ret0
}

// Increment indicates an expected call of Increment.
func (mr *MockWatchStatsRepositoryMockRecorder) Increment(arg0, arg1, arg2, arg3, arg4, arg5, arg6 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Increment", reflect.TypeOf((*MockWatchStatsRepository)(nil).Increment), arg0, arg1, arg2, arg3, arg4, arg5, arg6)
}
