// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bionicotaku/lingo-services-profile/internal/services (interfaces: EngagementStatsRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	po "github.com/bionicotaku/lingo-services-profile/internal/models/po"
	txmanager "github.com/bionicotaku/lingo-utils/txmanager"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockEngagementStatsRepository is a mock of EngagementStatsRepository interface.
type MockEngagementStatsRepository struct {
	ctrl     *gomock.Controller
	recorder *MockEngagementStatsRepositoryMockRecorder
}

// MockEngagementStatsRepositoryMockRecorder is the mock recorder for MockEngagementStatsRepository.
type MockEngagementStatsRepositoryMockRecorder struct {
	mock *MockEngagementStatsRepository
}

// NewMockEngagementStatsRepository creates a new mock instance.
func NewMockEngagementStatsRepository(ctrl *gomock.Controller) *MockEngagementStatsRepository {
	mock := &MockEngagementStatsRepository{ctrl: ctrl}
	mock.recorder = &MockEngagementStatsRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEngagementStatsRepository) EXPECT() *MockEngagementStatsRepositoryMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockEngagementStatsRepository) Get(arg0 context.Context, arg1 txmanager.Session, arg2 uuid.UUID) (*po.ProfileVideoStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2)
	ret0, _ := ret[0].(*po.ProfileVideoStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockEngagementStatsRepositoryMockRecorder) Get(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockEngagementStatsRepository)(nil).Get), arg0, arg1, arg2)
}

// Increment mocks base method.
func (m *MockEngagementStatsRepository) Increment(arg0 context.Context, arg1 txmanager.Session, arg2 uuid.UUID, arg3, arg4, arg5, arg6 int64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Increment", arg0, arg1, arg2, arg3, arg4, arg5, arg6)
	ret0, _ := ret[0].(error)
	return ret0
}

// Increment indicates an expected call of Increment.
func (mr *MockEngagementStatsRepositoryMockRecorder) Increment(arg0, arg1, arg2, arg3, arg4, arg5, arg6 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Increment", reflect.TypeOf((*MockEngagementStatsRepository)(nil).Increment), arg0, arg1, arg2, arg3, arg4, arg5, arg6)
}
