// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bionicotaku/lingo-services-profile/internal/services (interfaces: OutboxEnqueuer)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	store "github.com/bionicotaku/lingo-utils/outbox/store"
	txmanager "github.com/bionicotaku/lingo-utils/txmanager"
	gomock "github.com/golang/mock/gomock"
)

// MockOutboxEnqueuer is a mock of OutboxEnqueuer interface.
type MockOutboxEnqueuer struct {
	ctrl     *gomock.Controller
	recorder *MockOutboxEnqueuerMockRecorder
}

// MockOutboxEnqueuerMockRecorder is the mock recorder for MockOutboxEnqueuer.
type MockOutboxEnqueuerMockRecorder struct {
	mock *MockOutboxEnqueuer
}

// NewMockOutboxEnqueuer creates a new mock instance.
func NewMockOutboxEnqueuer(ctrl *gomock.Controller) *MockOutboxEnqueuer {
	mock := &MockOutboxEnqueuer{ctrl: ctrl}
	mock.recorder = &MockOutboxEnqueuerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOutboxEnqueuer) EXPECT() *MockOutboxEnqueuerMockRecorder {
	return m.recorder
}

// Enqueue mocks base method.
func (m *MockOutboxEnqueuer) Enqueue(arg0 context.Context, arg1 txmanager.Session, arg2 store.Message) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Enqueue", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Enqueue indicates an expected call of Enqueue.
func (mr *MockOutboxEnqueuerMockRecorder) Enqueue(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Enqueue", reflect.TypeOf((*MockOutboxEnqueuer)(nil).Enqueue), arg0, arg1, arg2)
}
